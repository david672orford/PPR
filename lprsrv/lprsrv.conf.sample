;
; lprsrv.conf.sample
; Last modified 20 October 2005.
;
; This is a sample security configuration file for the PPR LPR/LPD
; server.  The intent of this sample file is to duplicate as closely
; as possible the traditional behaviour of LPD servers, including the
; use of the access control files:
;
; /etc/hosts.lpd
; /etc/hosts.lpd_deny
; /etc/hosts.equiv
;
; You can use the program lprsrv-test to study the effect of the
; rules in this file.
;
; The settings which will be used for a particular client are arrived at by merging
; the [global] section and one other section.  The names of most sections are rules
; which match hostnames.  The longest match wins.  If no section matches, then the
; [traditional] section (if it exists) is tried and matches if the file named above 
; allow access.  If [traditional] doesn't exist or doesn't match, then the [other]
; section is used.
;

;
; This section sets default values for the other sections.  That is, any
; parameter setting specified here will be overridden if the parameter is set
; in the section which matches the name of the host which is sending the
; request job.  All four parameters should be set in this section.
;
; allow
;	Specifies whether access should be allowed to matching nodes.
; insecure ports
;	Specifies whether lprsrv should accept connexions from TCP ports
;	above 1024.  If you set this to "yes", you should not trust the
;	nodes in question to honestly identify the user for whom the request
;	was generated since ordinary users can make their own requests from
;	insecure ports therby bypassing lpr.
; user domain
;	Group of computers in which the username will be unique.  By 
;   assigning a group of computers one domain name, you can allow
;   a user to delete his jobs from any computer in that group.
; force mail
;   Always send e-mail on job completion as if the user had used lpr's
;   -m option.
;
[global]
allow = yes
insecure ports = no
force mail = no
user domain = $host

;
; This section applies to nodes which are granted access by /etc/hosts.lpd,
; /etc/hosts.lpd_deny, and /etc/hosts.equiv.  However, this section does not
; apply if some other section also matches the sending node name.
;
[traditional]
user domain = $host

;
; This section matches all nodes in a certain NIS netgroup.  Any section which
; explicitly specifies a matching hostname or domain will take precedence over
; this section.
;
;[@mynetgroup]
;user domain = mynetgroup

;
; This section applies to all hosts which match any of the pattens listed in 
; the file /etc/desktop_lpr_hosts.  It can be overridden by a matching section
; in this file just like netgroups can.
;
;[/etc/desktop_lpr_hosts]
;insecure ports = yes

;
; This section matches all nodes in a certain domain.  Notice that 
; "domain =" is used to indicate that a user with a given name should be
; considered to be the same no matter which of these nodes he is connecting
; from.  For example, the --user option for user "smith" connecting from 
; "spock.cs.domain.org" will be "smith@cs.domain.org".  If he is connecting 
; from "bashir.cs.domain.org" it will still be "smith@cs.domain.org".  Thus 
; he will be able, from Bashir,to cancel a job he submitted from Spock.
;
;[.cs.domain.org]
;user domain = cs.domain.org

;
; This section applies to a specific host.  Since this section
; is empty, it simply allows access under the terms of [global].
;
;[shakti.cc.domain.org]

;
; This section applies to sending nodes which do not match any of the other\
; sections including [traditional].
;
; In this example, we lock out nodes of this class by setting "allow = no".
;
[other]
allow = no

; end of file

