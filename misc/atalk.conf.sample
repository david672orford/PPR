#
# ~ppr/src/interfaces/atalk.conf
# Copyright 1995, Trinity College Computing Center.
# Written by David Chappell.
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose and without fee is hereby granted, provided
# that the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation.  This software and documentation are provided "as is" without
# express or implied warranty.
#
# This is the configuration file for the "atalk" responder and its
# AppleTalk network mapping daemon "atalkmapd".
#
# Last modified 25 August 1995.
#

#
# Directory where "getzones", "atlook" and other 
# CAP programs may be found.  You will have to change
# this if you have installed CAP in a different place.
#
$CAPBIN="/usr/local/cap/bin";

#
# If debug is non-zero, the atalk responder will send stdout and 
# stderr to the log file "/var/spool/ppr/logs/responder_atalk"
# This can be helpful for finding problems with the lines in the
# next section.
#
$DEBUG=1;

#
# The following section defines the various types of programs which 
# can be used to send messages to Macintosh computers.  You should comment
# out the definitions of program you don't have or don't want to have used
# as responders.
#
# The column on the left contains an AppleTalk type.  The column on the
# right contains Perl code which the atalk responder script should eval
# in order to send the message.  The atalk responder script defines the
# subroutine &run() fork()s and exec()s a child program and waits for it
# to terminate.
#
# The atalk responder will send to the first Macintosh message responder
# it finds.
#
# At the time of the eval, the following variables are defined:
#
# $CAPBIN	the value set above
# $MESSAGE	the text of the message
# $FOR		the name of the person for to whom the message is being sent
# $CODE		the numberic message type code (zero is `print job done')
# $NAME		the AppleTalk name to send to
# $TYPE		the AppleTalk type to send to
# $ZONE		the AppleTalk zone to send to
#

# The macto program in the CAP60 contributed directory
macUser		&run("$CAPBIN/macto","$NAME@$ZONE","Message for $FOR:\n\n$MESSAGE");

# Send to Macintosh "Broadcast", to persons willing to receive messages.
# Obviously, this requires the Unix version of Broadcast.
#BroadCast	&run("$CAPBIN/broadcast","-e","$NAME:$TYPE@$ZONE","-a","-m","Message for:\n$MESSAGE");

# Send to Macintosh "Broadcast", to persons unwilling to receive messages :)
# (This requires hacking Unix Broadcast so that non-root users may do this.)
#-BroadCast	&run("$CAPBIN/broadcast","-e","$NAME:$TYPE@$ZONE","-a","-m","Message for:\n$MESSAGE");

# Send to Macintosh "Broadcast", to persons unwilling to receive messages.
# This version sends him a message only if it is some message other than 
# `print job done'.
#-BroadCast	if($CODE!=0) {&run("$CAPBIN/broadcast","-e","$NAME:$TYPE@$ZONE","-a","-m","Message for:\n$MESSAGE");}

# end of file
