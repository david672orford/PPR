<Sect1 id="interfaces2">
<Title>Requirements for an Interface</Title>

<Para>
This appendix provides the information you will need to write a PPR printer
interface program.  An interface is a program, possibly a shell script, which
takes the text of the print job from standard input and sends it to the
printer.  Errors, such as PostScript error messages, should be sent to stdout
or stderr.
</Para>

<Sect2>
<Title>The Parameters</Title>

<Para>
There are 10 parameters in all, but most interfaces ignore all but the first
two or three.  There were 8 parameters in version 1.31.  In version 1.32
there are 10.  The order of parameters 1-3 did not change but the
order of parameters 4-9 did changed.
</Para>

<Para>
The interface is invoked with the first parameter set to the name of the
printer.  The interface should use this name when posting alerts using either
the alert() function in libppr.a or lib/alert.
</Para>

<Para>
The second parameter is set to the string following the <Emphasis remap="sf">Address:</Emphasis> keyword
in the printer configuration file or to the printer name if there is no address
line.  (That last feature is a holdover from very old versions of PPR. Printer
configuration files created by <Emphasis remap="bf">ppad</Emphasis> always have <Emphasis remap="sf">Address:</Emphasis> lines.)
</Para>

<Para>
The third parameter is set to the string following the <Emphasis remap="sf">Options:</Emphasis> keyword in
the printer config uration file.  This will be zero or more space separated
name=value pairs.
</Para>

<Para>
The fourth parameter is the value from the printer configuration file's
<Emphasis remap="sf">JobBreak:</Emphasis> line.  This value is a small integer.  The possible values are
defined in <Literal remap="tt">include/interface.h</Literal>.
</Para>

<Para>
The fifth is the value from the printer configuration file's <Emphasis remap="sf">Feedback:</Emphasis>
line.  It is zero if the printer is incapable of sending data back to the
computer running PPR over the communications line, non-zero if it is capable.
The <Emphasis remap="sf">Feedback:</Emphasis> line is set with the <Emphasis remap="bf">ppad feedback</Emphasis> command.
</Para>

<Para>
The sixth parameter is the value from the printer configuration file's
<Emphasis remap="sf">Codes:</Emphasis> line.  The value is a small integer.  The possible values are defined
in <Literal remap="tt">include/interface.h</Literal>.
</Para>

<Para>
The seventh parameter is set to the name of the job.  (For example,
``mouse:chipmunk-148.0(mouse)''.  This will not generally be used.  The
<Emphasis remap="bf">lpr</Emphasis> interface passes this information on to the remote system.
</Para>

<Para>
The eight parameter is set the the text of the &percnt;&percnt;Routing:
comment in the print job.  If the &percnt;&percnt;Routing: comment is absent, then the
fourth parameter is blank.  This parameter will generally be ignored.  If a fax
interface is every written it will read the telephone number from this
parameter.
</Para>

<Para>
The ninth parameter is the text of the <Emphasis remap="sf">&percnt;&percnt;For:</Emphasis> comment in the
print job.  (The <Emphasis remap="sf">&percnt;&percnt;For:</Emphasis> line in the job as sent to the
printer which is not necessarily the same as the <Emphasis remap="sf">&percnt;&percnt;For:</Emphasis> line
in the input file.)  If this information is unavailable, the field is blank.
The <Emphasis remap="bf">lpr</Emphasis> interface passes this on to the remote system.
</Para>

<Para>
The tenth parameter indicates the type of the file on stdin, that is, the
file which the interface program is going to transmit to the printer.  Normally
this parameter is an empty string, which indicates that the file is in
PostScript format.
</Para>

<Para>
If passthru mode is in effect (see <Emphasis remap="bf">ppad passthru</Emphasis> and <Emphasis remap="bf">ppad group
passthru</Emphasis>), that is if the file to be transmitted to the printer is not
a PostScript file, then this parameter will be the name of the file type,
such as ``pcl'' or ``pdf''.  (The file type names which appear in this
parameter are the same names as are used with the <Emphasis remap="bf">ppr -T</Emphasis> switch.
A non-empty tenth parameter <Emphasis>does not</Emphasis> necessarily indicate that
a <Emphasis remap="bf">-T</Emphasis> switch was used.)
</Para>

<Para>
Also, if transparent mode is in effect (see <Emphasis remap="bf">ppr -H transparent</Emphasis>), then
this parameter will contain a space separated list of the filters which
would be required (and may actually have been invoked) to convert the
input file to PostScript.  Uncompression with <Emphasis remap="bf">uncompress</Emphasis>
and <Emphasis remap="bf">gunzip</Emphasis> are indicated by the strings ``uncompress'' and ``gunzip''
respectively.  Here are some examples:  if the input file is already PostScript,
then this parameter will be empty.  If the file is PCL data, then this
paramater will be ``pcl''.  If the file is <Emphasis remap="bf">gzip</Emphasis> compressed
PostScript, then this parameter will be ``gunzip''.  If the file is
<Emphasis remap="bf">gzip</Emphasis> compressed PCL, then this parameter will be ``gunzip pcl''.
</Para>

<Para>
The various Ghostscript interfaces examine the value of this 10th parameter,
and if it is not empty, remove Ghostscript from the pipeline.
</Para>

</Sect2>

<Sect2>
<Title>The Return Codes</Title>

<Para>
The exit codes which interface programs should use are defined in
<Literal remap="tt">include/interface.h</Literal> and <Literal remap="tt">/lib/interface.sh</Literal>.
</Para>

<Para>
If the interface prints the job successfully, it should return an exit code of
<Emphasis remap="bf">EXIT&lowbar;PRINTED</Emphasis>.
</Para>

<Para>
If there was a printer error, the interface should exit with code
<Emphasis remap="bf">EXIT&lowbar;PRNERR</Emphasis> and the printer will be placed in fault-auto-retry mode.
</Para>

<Para>
If the printer error was caused by a circumstance which will not disappear
spontainiously, such as a syntactically invalid printer address, then the
interface should return <Emphasis remap="bf">EXIT&lowbar;PRNERR&lowbar;NORETRY</Emphasis> and the printer will be placed
in fault-no-auto-retry mode.
</Para>

<Para>
If a PostScript error occured in the job and the interface detects it it should
use the code <Emphasis remap="bf">EXIT&lowbar;JOBERR</Emphasis>.  Generally the interface will leave the job of detecting
PostScript errors to <Emphasis remap="bf">pprdrv</Emphasis> which examines the messages received from the
printer.
</Para>

<Para>
If the interface program catches a signal such as SIGTERM, it should exit
with code <Emphasis remap="bf">EXIT&lowbar;SIGNAL</Emphasis> at the end of the signal handler function.
</Para>

<Para>
If no printer error occured but the printer was busy or off line, the
interface should return <Emphasis remap="bf">EXIT&lowbar;ENGAGED</Emphasis>.
</Para>

<Para>
The interface program should not return any value other than those defined
above.  Any undefined value will be interpreted as a <Emphasis remap="bf">EXIT&lowbar;PRNERR</Emphasis>.
</Para>

</Sect2>

<Sect2>
<Title>Interpretation of the Fifth Parameter</Title>

<Para>
If the <Emphasis remap="it">jobbreak</Emphasis> value for the printer (the firth parameter) is
<Emphasis remap="bf">JOBBREAK&lowbar;SIGNAL</Emphasis>, or  <Emphasis remap="bf">JOBBREAK&lowbar;SIGNAL&lowbar;PJL</Emphasis> then the interface should
send its parent SIGUSR1 as soon as it has established its own SIGUSR1 handler.
Thereafter, whenever it receives SIGUSR1, it should read all bytes currently
available from the pipe, send them to the printer and then send the printer an
end of job indication. When it receives an acknowleding end of job indication
from the printer, it should send its parent SIGUSR1.  The interface <Emphasis remap="bf">atalk</Emphasis>
does this.  This handshaking method is necessary because the PAP (AppleTalk
Printer Access Protocol) end of file marker has no representation in the byte
stream.  Instead it is sent by setting a special flag in the header of the
packet.
</Para>

<Para>
Other job break values do not require any special action on the part of
the interface.  (Before version 1.40, interfaces took special action for
the control-d and pjl methods.  This is no longer necessary.)
</Para>

<Para>
It might be useful to have the interface test for jobbreak settings with which it
is known to be incompatible.  It should only check for settings <Emphasis>known</Emphasis> to be
incompatible.  It should not limit jobbreak settings to a list of those known to
be compatible since other, compatible settings may be added in future versions of
PPR.  The various possible jobbreak settings are briefly described in the ppad(8)
man page under the section for the <Emphasis remap="bf">ppad jobbreak</Emphasis> command.  A more thorough
discussion may be found in section <XRef LinkEnd="interfaces1">.  The code numbers for the various jobbreak values are defined in the
include file <Literal remap="tt">include/interface.h</Literal> and in the shell script fragment
<Literal remap="tt">/lib/interface.sh</Literal>.
</Para>

</Sect2>

</Sect1>

