%!PS-Adobe 3.0
%%Title: AdobePS_Win_Driver_L2
%%Version: 4.2 0
%%Copyright: Copyright 1997, Adobe Systems Incorporated.
%%EndComments

% This code is included in the output generated by the Adobe PostScript
% driver version 4.2x for MS-Windows 95.  Unfortunately, there are several
% different versions of this procedure set.  Different versions have
% different enclosed procedure sets.  The one below should have all
% of the possible enclosed procedure sets.  There is no proof that
% it does.

userdict /AdobePS_Win_Driver_L2 250 dict dup begin put
%%BeginResource: procset AdobePS_FatalError 4.2 0
/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup length dict
begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding{ISOLatin1Encoding}
stopped{StandardEncoding}if def currentdict end/ErrFont-Latin1 exch definefont
}ifelse exch scalefont setfont counttomark 3 div cvi{moveto show}repeat
showpage quit}{cleartomark}ifelse}bind def
%%EndResource
[
(This job can print only on a PostScript(R) Level 2 or 3 ) 100 500
(printer. Please send this file to a Level 2 or 3 printer.) 100 485
( ) 100 470
12 /Times-Roman
/languagelevel where {pop languagelevel}{1} ifelse 2 lt FatalErrorIf
/VM? {vmstatus exch sub exch pop gt { [
(This job requires more memory than is available in this printer.) 100 500
(Try one or more of the following, and then print again:) 100 485
(In the PostScript dialog box, click Optimize For Portability.) 115 470
(In the Device Options dialog box, make sure the Available Printer Memory is accurate.) 115 455
(Reduce the number of fonts in the document.) 115 440
(Print the document in parts.) 115 425
12 /Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%) =
true FatalErrorIf}if} bind def
30000  VM?
%%BeginResource: procset AdobePS_Win_Utils 4.2 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d
/C/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-C/rcurveto ,
d/-M/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin
, d/Lw/setlinewidth , d/S/show , d/LH/showpage , d/K/stroke , d/W/widthshow ,
d/R/rotate , d/XS/xshow , d/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}
bd/lw/Lw ld/lc/Lc ld/lj/Lj ld/sg/setgray ld/bn/bind ld/L2? F/languagelevel
where{! languagelevel 2 ge{! T}if}if d/L3? F/languagelevel where{!
languagelevel 3 ge{! T}if}if d/g{@ not{U/DefIf_save save put}if U/DefIf_bool 2
^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e{
DefIf_El !}b/self & d/reinitialize{[/TextInit/GraphInit/UtilsInit counttomark{
@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark}b/initialize{`{
/ADO_mxRot ~ d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230
dict @ ` put/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{&
self eq{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b
/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~ itransform
}b/dsnap{dtransform round ~ round ~ idtransform}b U<04>cvn{}put/setjn{{
statusdict/jobname known{statusdict/jobname 3 -1 $ put}if}stopped cleartomark}
b/solid{[]0 setdash}b/setdsh{0 setdash}b/colspRefresh{}b/rp{4 2 $ M 1 ^ 0 - 0
~ - neg 0 -}b/rr{1 ^ 0 - 0 ~ - neg 0 - C}b/CTMsave{globaldict ` currentglobal
T setglobal/SavedCTM matrix currentmatrix d setglobal E}b/CTMrestore{
globaldict ` currentglobal T setglobal/SavedCTM where{! SavedCTM setmatrix}if
setglobal E}b/emuxs{! ! currentpoint( )@ 0 6 -1 $ put S ~ 3 ^ 3 ^ get add ~ M
1 add}b/XSE{version cvi 2015 ge{XS}{0/emuxs , 4 -1 $ cshow ! !}?}b
%%EndResource
%%BeginResource: procset AdobePS_Win_Utils_L2 4.2 0
/colspA/DeviceGray d/colspABC/DeviceRGB d/setAorABC{{colspA}{colspABC}?
setcolorspace}b/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5
}? 3 -1 $ @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $
idtransform}b/BZ{4 -2 $ snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/sg
{@ @ setcolor}b/sco{setcolor}b/colspRefresh{colspABC setcolorspace}b/sgco{{sg
}{sco}?}b/UtilsInit{currentglobal{F setglobal}if}b/resourcestatus where{!
/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}? not{/ColorRendering<<
/GetHalftoneName{currenthalftone @/HalftoneName known{/HalftoneName get}{!
/none}?}bn/GetPageDeviceName{currentpagedevice @/PageDeviceName known{
/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn/GetSubstituteCRD{!
/DefaultColorRendering/ColorRendering resourcestatus{! !/DefaultColorRendering
}{(DefaultColorRendering*){cvn exit}127 string/ColorRendering resourceforall}?
}bn>>/defineresource where{!/ProcSet defineresource !}{! !}?}if/buildcrdname{
/ColorRendering/ProcSet findresource ` mark GetHalftoneName @ type @/nametype
ne ~/stringtype ne and{!/none}if(.)GetPageDeviceName @ type @/nametype ne ~
/stringtype ne and{!/none}if(.)5 ^ 0 5 -1 1{^ length add}for string 6 1 $ 5 ^
5{~ 1 ^ cvs length 1 ^ length 1 ^ sub getinterval}repeat ! cvn 3 1 $ ! ! E}b
/definecolorrendering{~ buildcrdname ~/ColorRendering defineresource !}b
/findcolorrendering where{!}{/findcolorrendering{buildcrdname @/ColorRendering
resourcestatus{! ! T}{/ColorRendering/ProcSet findresource ` GetSubstituteCRD
E F}?}b}?/selectcolorrendering{findcolorrendering !/ColorRendering
findresource setcolorrendering}b/ExecWMForm{execform}b/setpagedevice where{!
/realstpgdev/setpagedevice ld}if/SC_topddict 0 d/SC_spdict 0 d/dopgdev{
Pscript_Win_Data/setpagedevice undef SC_topddict @ length 0 gt{realstpgdev}if}
bd/stpgdev{SC_topddict @ 3 -1 ${SC_spdict 2 ^ known{SC_spdict 2 ^ get @ 3 -1 $
{put @}forall ! put @}{put @}?}forall ! !}bd/ststpgdev{Pscript_Win_Data
/setpagedevice/stpgdev , put/SC_topddict 0 dict store/SC_spdict 3 dict `
/InputAttributes 0 dict d/Policies 0 dict d/OutputAttributes 0 dict d & E
store}d
%%EndResource
%%BeginResource: procset AdobePS_Win_Nup 4.2 0
U `/d(def)cvn ld/realshowpage 0 d/$m matrix d/nx_nup 0 d/ny_nup 0 d/pagew_nup
0 d/pageh_nup 0 d/paperw_nup 0 d/paperh_nup 0 d/nups 0 d/pgx_nup 0 d/pgy_nup 0
d/papermarg_nup 1 d/pagemarg_nup 10 d/framenup T d/nupv 5 array d/xoffset 0 d
/yoffset 0 d/borderlinewidth 0 d/angle 0 d E/definenup{/LH/nupshowpage ld nupv
astore !/pgx_nup 0 store/pgy_nup 0 store}bd/startnup{/pgy_nup ~ store/pgx_nup
~ store nupv aload !/ny_nup ~ store/nx_nup ~ store/pageh_nup ~ store/pagew_nup
~ store/borderlinewidth ~ store @/angle ~ store R clippath/nups pathbbox 3 -1
$ sub papermarg_nup sub ny_nup V pagemarg_nup sub pageh_nup V ~ 3 -1 $ sub
papermarg_nup sub nx_nup V pagemarg_nup sub pagew_nup V 2 copy gt{~}if ! store
nups @ +S/paperw_nup pagew_nup pagemarg_nup nups V add store/paperh_nup
pageh_nup pagemarg_nup nups V add store pathbbox $m aload ! pagemarg_nup nups
V @ 8 ^ 11 ^ sub paperh_nup ny_nup mul sub add 2 V ~ 9 ^ 12 ^ sub paperw_nup
nx_nup mul sub add 2 V 7 ^ 0 eq{8 -4 $ 4 2 $ 8 4 $}if 8 -2 $ add 0 gt{9}{neg 7
}? ^ add 4 -1 $ sub ~ 5 -2 $ add 0 gt{5}{neg 3}? ^ add 3 -1 $ sub 2 copy
/yoffset ~ store/xoffset ~ store + ! ! ! !/paperw_nup paperw_nup paperh_nup $m
idtransform abs/paperh_nup ~ store abs store/pagew_nup pagew_nup pageh_nup $m
idtransform abs/pageh_nup ~ store abs store $m 0 get abs $m 1 get abs lt{
/nx_nup ny_nup/ny_nup nx_nup store store}if borderlinewidth 0 gt{0.48 nups V @
/borderlinewidth ~ store Lw}{/framenup F d}? $m concat pgx_nup paperw_nup mul
pgy_nup paperh_nup mul + $m matrix invertmatrix concat N startpage}bd
/reinitnup{startnup}bd/startpage{: 0 0 $m transform pagew_nup pageh_nup $m
dtransform rc}bd/realshowpage/LH ld/nupshowpage{; $m concat framenup{
pagemarg_nup 2 V nups V @ $m idtransform abs neg ~ abs neg ~ paperw_nup
paperh_nup rs}if/pgx_nup pgx_nup 1 add @ nx_nup eq{! 0 store paperw_nup 1
nx_nup sub mul/pgy_nup pgy_nup 1 add @ ny_nup eq{! 0 store paperh_nup 1 ny_nup
sub mul}{store paperh_nup}?}{store paperw_nup 0}? + $m matrix invertmatrix
concat startpage}bd/finalpage{; realshowpage/LH/realshowpage ld}bd
%%EndResource
%%BeginResource: procset AdobePS_Win_Text 4.2 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 -1 0 0]d/mFM matrix d/iMat[1 0 0.212557 neg 1 0 0]d}if}b/copyfont{1
^ length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 9 dict d
/bullets{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ &
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if d E}b/FDV/FDepVector d/pd_scratch 128 string d/pd_concatnames{2 copy cvs
length 3 ^ 2 ^ cvs length @ 3 1 $ add 1 add string @ @ @ 0 9 -1 $ 7 ^ cvs
putinterval 3 ^ 45 put 5 -2 $ cvs 4 -1 $ 1 add ~ putinterval cvn}b
/pd_genunqname{pd_Incr @ 1 add/pd_Incr ~ d pd_scratch cvs cvn pd_InstName ~
pd_scratch pd_concatnames}b/pd_GetAdoNotDefFont{U(AdoNotDefFont)2 copy known{
get}{@ 11 dict `/FontName 1 ^ d/FontMatrix matrix d/FontType 0 d/FMapType 2 d
/Encoding[0 0 0 0]d/FDepVector[/NotDefFont findfont]d & E definefont @ 4 1 $
put}?}b/pd_FCIsCovered{@/SubsVector get @ 0 ~{add}forall 256 ge{! ! T}{length
1 sub ~/Encoding get ~ get F}?}b/pd_CoverFCRange{@ pd_FCIsCovered not{~ @ FDV
2 copy get @ 6 -1 $ pd_GetAdoNotDefFont put put}if}b/pd_RKSJ2Ext{{(Ext-RKSJ-H)
}{(Ext-RKSJ-V)}? ~ @ length @ 6 sub ~ 4 add string @ @ 0 6 -1 $ @ length
string cvs putinterval 4 2 $ ~ putinterval cvn}b/pd_FindExtFont{pd_RKSJ2Ext @{
findfont}stopped{! ! F}{@/FontName 2 copy known{get 3 -1 $ eq @ not{~ !}if}{4{
!}repeat F}?}?}b/pd_AddEm87{pd_FindExtFont{FDV get 2 get FDV get 7 get ~ @ FDV
2 copy get @ length array copy @ 2 2 copy get 0 copyfont @ FDV 2 copy get @
length @ @ 1 add array @ 0 6 -1 $ putinterval @ 4 2 $ 6 1 $ 14 -1 $ put put 1
^/Encoding 2 copy get @ length array copy @ 6 6 -1 $ put put @/FontName
pd_genunqname @ 4 1 $ put ~ definefont put put}if pd_CoverFCRange}b/mF{@ 7 1 $
findfont ~{@/Encoding get @ StandardEncoding eq{! T}{{ISOLatin1Encoding}
stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get StandardEncoding 3 -1 $
get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 ${T pd_AddEm87 ~ !}{! ~
!/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy put
pd_CoverFCRange}if}{!}?}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/pd_IsModeSwitchAble{F/resourcestatus
where{!/CIDParams/ProcSet 2 copy resourcestatus{! ! findresource @
/SetBuildCompatible known ~/GetBuildCompatible known and ~ 0}if ! !}if}b
/pd_LParams 8 dict d/pd_DefLocalParams{pd_LParams `/pd_InstName ~ d/pd_Incr 0
d @/pd_charset ~ d/pd_SwitchAble pd_IsModeSwitchAble d/pd_PreviousMode T d ! &
E}b/pd_IsCID-KeyedFont{/resourcestatus where{!{/CMap resourcestatus}stopped{!
! ! F}{{! !/CIDFont resourcestatus{! ! T}{F}?}{! F}?}?}{! ! F}?}b
/pd_SwitchToNative{F pd_SwitchAble{!/CIDParams/ProcSet findresource @
/GetBuildCompatible get exec F 3 -1 $/SetBuildCompatible get exec}if
/pd_PreviousMode ~ d}b/pd_IsCIDCapable{/CIDInit/ProcSet resourcestatus @{! ! !
T}if}b/pd_mF_Finally{fM @ 4 0 put @ 5 5 -1 $ put makefont Pscript_Windows_Font
3 1 $ put}b/pd_SwitchToPrevious{pd_SwitchAble{pd_PreviousMode/CIDParams
/ProcSet findresource/SetBuildCompatible get exec}if}b/pd_gen90ms{{
/90ms-RKSJ-H}{/90ms-RKSJ-V}? pd_scratch pd_concatnames}b/pd_GetHKPos{@
/SubsVector get @ length 1 sub 0 1 ^ 1 1 3 -1 ${~ 3 ^ 2 ^ get add @ 160 eq{4 2
$ ! ! ! exit}{~ 2 ^ ge{! ! ! 0}if}?}for ~/Encoding get ~ get}b/mF_83pv_CID{T
pd_gen90ms[4 ^[5 -2 $ ~]/CIDInit/ProcSet findresource ` beginrearrangedfont 1
usefont 2 beginbfrange<00><80><00><a0><df><a0>endbfrange endrearrangedfont E
cleartomark 1 ^ findfont}b/mF_83pv_CSL{T pd_gen90ms ~ findfont @ pd_GetHKPos ~
FDV get @ 0 get 3 1 $ ~ get 3 -1 $ findfont 0 copyfont @ pd_GetHKPos ~ @ FDV 2
copy get @ length array copy @ 0 9 -1 $ 2 ^ 10 -2 $ ~ put put put 2 ^ ~
definefont}b/mF_FE{6 -1 $ ! 6 ^ pd_DefLocalParams ` 2 copy pd_IsCID-KeyedFont{
4 -1 $ ! 6 -1 ${3 -1 $ ! !/90ms-RKSJ-H 2 copy pd_scratch pd_concatnames 3 1 $}
if pd_SwitchToNative @/83pv-RKSJ-H eq{! pd_IsCIDCapable{mF_83pv_CID}{
mF_83pv_CSL}?}{4 ^ ~[4 -1 $]composefont ~ !}? pd_mF_Finally
pd_SwitchToPrevious}{! !/0 3 1 $ mF}? E}b/xF{scalefont Pscript_Windows_Font 3
1 $ put}b/xMF{mFM astore makefont Pscript_Windows_Font 3 1 $ put}b/xF2
/scalefont , d/xMF2{mFM astore makefont}b/sLT{: Lw -M currentpoint snap M 0 -
0 Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU
{N/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b
/sT{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/;
, d/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/G00GFFEncoding[/G00/G01/G02
/G03/G04/G05/G06/G07/G08/G09/G0A/G0B/G0C/G0D/G0E/G0F/G10/G11/G12/G13/G14/G15
/G16/G17/G18/G19/G1A/G1B/G1C/G1D/G1E/G1F/G20/G21/G22/G23/G24/G25/G26/G27/G28
/G29/G2A/G2B/G2C/G2D/G2E/G2F/G30/G31/G32/G33/G34/G35/G36/G37/G38/G39/G3A/G3B
/G3C/G3D/G3E/G3F/G40/G41/G42/G43/G44/G45/G46/G47/G48/G49/G4A/G4B/G4C/G4D/G4E
/G4F/G50/G51/G52/G53/G54/G55/G56/G57/G58/G59/G5A/G5B/G5C/G5D/G5E/G5F/G60/G61
/G62/G63/G64/G65/G66/G67/G68/G69/G6A/G6B/G6C/G6D/G6E/G6F/G70/G71/G72/G73/G74
/G75/G76/G77/G78/G79/G7A/G7B/G7C/G7D/G7E/G7F/G80/G81/G82/G83/G84/G85/G86/G87
/G88/G89/G8A/G8B/G8C/G8D/G8E/G8F/G90/G91/G92/G93/G94/G95/G96/G97/G98/G99/G9A
/G9B/G9C/G9D/G9E/G9F/GA0/GA1/GA2/GA3/GA4/GA5/GA6/GA7/GA8/GA9/GAA/GAB/GAC/GAD
/GAE/GAF/GB0/GB1/GB2/GB3/GB4/GB5/GB6/GB7/GB8/GB9/GBA/GBB/GBC/GBD/GBE/GBF/GC0
/GC1/GC2/GC3/GC4/GC5/GC6/GC7/GC8/GC9/GCA/GCB/GCC/GCD/GCE/GCF/GD0/GD1/GD2/GD3
/GD4/GD5/GD6/GD7/GD8/GD9/GDA/GDB/GDC/GDD/GDE/GDF/GE0/GE1/GE2/GE3/GE4/GE5/GE6
/GE7/GE8/GE9/GEA/GEB/GEC/GED/GEE/GEF/GF0/GF1/GF2/GF3/GF4/GF5/GF6/GF7/GF8/GF9
/GFA/GFB/GFC/GFD/GFE/GFF]readonly d
%%EndResource
%%BeginResource: procset AdobePS_Win_Encoding 4.2 0
/ANSIEncoding[/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis
/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18 bullets StandardEncoding
32 95 getinterval aload !/.notdef/.notdef/.notdef/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron
/guilsinglleft/OE/.notdef/.notdef/.notdef/.notdef/quoteleft/quoteright
/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/.notdef/.notdef/Ydieresis{ISOLatin1Encoding}stopped{96
bullets}{160 96 getinterval aload !}?]d ANSIEncoding @ 39/quotesingle put 96
/grave put/ANSIEncodingOld ANSIEncoding 256 array copy d ANSIEncodingOld @[138
153 154 169 172 174 177 178 179 181 185 188 189 190 208 215 221 222 240 247
253 254]{/bullet put @}forall 166/bar put 176/ring put EncodeDict/0
ANSIEncoding put EncodeDict/ANSIEncodingOld ANSIEncodingOld put
%%EndResource
%%BeginResource: procset AdobePS_Win_Text_Bold 4.2 0
/mBF{~ ! Pscript_Windows_Font 3 1 $ put}b/xBF{scalefont Pscript_Windows_Font 3
1 $ put}b/xMBF{mFM astore makefont Pscript_Windows_Font 3 1 $ put}b/xBF2
/scalefont , d/xMBF2{mFM astore makefont}b/sB{1 copy 2 copy : sBdx 0 -M S ; :
0 sBdx -M S ; : sBdx sBdx -M S ; S}b/asB{3 copy 3 copy 3 copy : sBdx 0 -M A ;
: 0 sBdx -M A ; : sBdx sBdx -M A ; A}b/wsB{4 copy 4 copy 4 copy : sBdx 0 -M W
; : 0 sBdx -M W ; : sBdx sBdx -M W ; W}b/awsB{6 copy 6 copy 6 copy : sBdx 0 -M
D ; : 0 sBdx -M D ; : sBdx sBdx -M D ; D}b/xsB{2 copy 2 copy 2 copy : sBdx 0
-M XSE ; : 0 sBdx -M XSE ; : sBdx sBdx -M XSE ; XSE}b/mIF{iMat 4 3 -1 $ put
iMat makefont Pscript_Windows_Font 3 1 $ put}b
%%EndResource
%%BeginResource: procset AdobePS_Win_FarEast 4.2 0
/pd_copybfont{1 ^ length add dict `{1 ^/FID eq 2 ^/UniqueID eq 3 ^/XUID eq or
or{! !}{d}?}forall & E}b/hrM[0 -1 1 0 0 0]d/concatprocs{[3 1 $/exec , @ 3 1 $]
cvx}b/dir1-to-dir0-CDevProc{! ! ! ! ! 6 -2 $ 2 copy 8 2 $ 0 0}b
/dir1-to-dir0-CDevProc.post{! ! ! ! 6 -2 $ 2 copy 8 2 $ 0 0}b/rotatebasefont{1
^ 3 1 $ 2 copy get 1 pd_copybfont @/CDevProc 2 copy known{2 copy get
/dir1-to-dir0-CDevProc.post , concatprocs}{/dir1-to-dir0-CDevProc ,}? put
pd_genunqname ~ definefont hrM @ 4 -0.38 put makefont put}b
/R-RKSJ-hankaku-fonts{2 copyfont @ FDV 2 copy get @ length array copy 2 ^
/Encoding get 0 get rotatebasefont 2 ^/Encoding get 3 get rotatebasefont put}b
/mF_V{4 ^{@ 6 1 $}if findfont ~{pd_charset 128 eq{R-RKSJ-hankaku-fonts}{}?}{2
copyfont}? 4 -1 ${4 -1 $ F pd_AddEm87}if 2 ^ ~ definefont fM 4 4 -1 $ neg put
fM 5 0 put fM @ 4 ~ 4 get 0.34 add put fM makefont -90 matrix R makefont
Pscript_Windows_Font 3 1 $ put}b/iMat_V[1 0.212557 0 1 0 0]d/mIF_V{iMat_V 5 3
-1 $ put iMat_V makefont Pscript_Windows_Font 3 1 $ put}b/sLT2{: Lw -M
currentpoint snap M - K ;}b/sU2{xUP yUP uW sLT2}b/sT2{xSP ySP sW sLT2}b
/CDevProc-83pv{! 10 -2 $ ! ! 0 -1000 10 -1 $ 120 sub 10 -1 $ 1250 sub 10 -1 $
120 sub 10 -1 $ 1250 sub 10 -4 $}b/k-trans[0 1 -1 0 0 0]d/r_font{{2 copyfont}{
2 pd_copybfont}? @/CDevProc/CDevProc-83pv , put @/WMode 1 put pd_genunqname ~
definefont k-trans makefont put}b/r_k_basefont{~{@ 7 4 -1 $ F r_font @ 3 4 -1
$ T r_font @ 2 4 -1 $ T r_font @ 1 4 -1 $ F r_font @ @ 5 get 5 ~ F r_font @ @
6 get 6 ~ F r_font @ 8 1 2 ^ length 1 sub{2 copy get T r_font @}for}{@ 0 1 2 ^
length 1 sub{2 copy get T r_font @}for}? !}b/r_k_font{1 ^ 3 1 $ 2 copy get 1
copyfont @/FontType get 0 eq{1 ^ 2 eq{2 ^ 4 get FDV get @ 12 get 1 ^ 13 get 2
^ 14 get 4 -1 $ 15 get T 5 ^ FDV get}{@ FDV get F ~}? @ length array copy
r_k_basefont 1 ^ 3 1 $ FDV ~ put}if @/WMode 1 put pd_genunqname ~ definefont
put}b/r-83pv-k-fonts{k-trans 4 -0.38 put 1 copyfont @ FDV 2 copy get @ length
array copy 2 r_k_font 4 r_k_font put}b/mF_83V{findfont r-83pv-k-fonts
pd_CoverFCRange 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM makefont
Pscript_Windows_Font 3 1 $ put}b/hrCDevProcV-J{5{!}repeat 5 ^ 5 ^ 0 0}b
/hrCDevProcV-CK{! ! ! 0 0}b/pd_DefLocalVParams{pd_LParams `/pd_InstName ~ d
/pd_Incr 0 d ~ @/pd_charset ~ d/pd_SwitchAble pd_IsModeSwitchAble d
/pd_PreviousMode T d 128 eq{/pd_CDevProcV/hrCDevProcV-J d/pd_hrMTx -0.38 d}{
/pd_CDevProcV/hrCDevProcV-CK d/pd_hrMTx -0.38 d}?/pd_NeedRearrangement ~ d & E
}b/pd_mF_V_Finally{fM @ 4 5 -1 $ neg 0.34 add put @ 5 0 put makefont -90
matrix R makefont Pscript_Windows_Font 3 1 $ put}b/pd_InstallCDevProcV{
pd_InstName 3 ^ pd_scratch pd_concatnames @ 3 -1 $ 4 ^/CIDFont findresource @
length 2 add dict `{1 ^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}
forall/CDevProc ~ d & E/CIDFont defineresource ! 3 -1 $ pd_InstName pd_scratch
pd_concatnames @ 4 2 $[~]composefont !}b/mF_V_CID{pd_NeedRearrangement{
pd_CDevProcV , pd_InstallCDevProcV mark 4 ^[5 -2 $]/CIDInit/ProcSet
findresource ` beginrearrangedfont/WMode 1 d 1 beginusematrix hrM @ 4 pd_hrMTx
put endusematrix 1 usefont 1 beginbfrange<00><80><00>endbfrange pd_charset 128
eq{1 beginbfrange<a0><df><a0>endbfrange}if endrearrangedfont E cleartomark}{4
^ ~[4 -1 $]composefont ! !}? 1 ^ findfont}b/mF_83V_CID{1 ^ ~ pd_CDevProcV ,
pd_InstallCDevProcV ~ F pd_gen90ms mark 5 ^[5 -2 $ ~]/CIDInit/ProcSet
findresource ` beginrearrangedfont/WMode 1 d 1 beginusematrix hrM @ 4 -0.3 put
endusematrix 1 usefont 2 beginbfrange<00><80><00><a0><df><a0>endbfrange
endrearrangedfont E cleartomark ! 1 ^ findfont}b/pd_InstallCDPVAndRotate{~ 2
pd_copybfont @/CDevProc 4 -1 $ put pd_genunqname ~ definefont hrM @ 4 pd_hrMTx
put makefont}b/mF_V_CSL{! ! findfont 1 copyfont @ FDV 2 copy get @ length
array copy @ @ 0 get pd_CDevProcV , pd_InstallCDPVAndRotate 0 ~ put pd_charset
128 eq{@ @ 4 ^ pd_GetHKPos @ 3 1 $ get pd_CDevProcV , pd_InstallCDPVAndRotate
put}if put 2 ^ ~ definefont}b/mF_83V_CSL{findfont @ pd_GetHKPos ~ FDV get @ 0
get pd_CDevProcV , pd_InstallCDPVAndRotate 3 1 $ ~ get pd_CDevProcV ,
pd_InstallCDPVAndRotate 3 -1 $ findfont 1 copyfont @ pd_GetHKPos ~ @ FDV 2
copy get @ length array copy @ 0 9 -1 $ put @ 7 -2 $ ~ put put 2 ^ ~
definefont}b/mF_V_FE{7 -1 $ ! 7 ^ pd_DefLocalVParams ` 2 copy
pd_IsCID-KeyedFont{4 -1 $ ! 6 -1 ${3 -1 $ ! !/90ms-RKSJ-V 2 copy pd_scratch
pd_concatnames 3 1 $}if pd_SwitchToNative pd_IsCIDCapable{mF_V_CID}{mF_V_CSL}?
pd_mF_V_Finally pd_SwitchToPrevious}{! ! mF_V}? E}b/mF_83V_FE{6 -1 $ ! 5 -1 $
! 7 -1 $ ! T 6 ^ pd_DefLocalVParams ` 2 copy pd_IsCID-KeyedFont{
pd_SwitchToNative pd_IsCIDCapable{mF_83V_CID}{! F pd_gen90ms ~ mF_83V_CSL}?
pd_mF_V_Finally pd_SwitchToPrevious}{! ! mF_83V}? E}b
%%EndResource
%%BeginResource: procset AdobePS_Win_FarEast2 4.2 0
/mIFK{iMat 4 3 -1 $ put iMat makefont Pscript_Windows_Font 3 1 $ put}b
%%EndResource
%%BeginResource: procset AdobePS_Win_Graphics 4.2 0
/Saved_CTM null d/CTM_save{/Saved_CTM Saved_CTM currentmatrix d}b/CTM_restore{
Saved_CTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d
/Reps 5 d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType 1
d/PaintProc{` 1 Lw[]0 setdash PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal{
biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}
b/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{GDIHPatternDict
/PaintData 3 -1 $ put CTM_save GDIHMatrix setmatrix GDIHPatternDict matrix mp
CTM_restore ~ U ~ 2 ^ put}b/h0{/h0/HS_Horizontal makehatch}b/h1{/h1
/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal makehatch}b/h3{/h3/HS_BDiagonal
makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5/HS_DiagCross makehatch}b
/GDIBWPatternDict 17 dict @ `/PatternType 1 d/PaintType 2 d/RepsV 6 d/RepsH 5
d/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/PaintProc{` RepsH{Width Height F mx PaintData imagemask Width 0 +}repeat E}b
E d/GDIBWPatternMx null d/pfprep{save 4 1 $/PatternOfTheDay 4 1 $
GDIBWPatternDict `/PaintData ~ d/BGnd ~ d/FGnd ~ d E CTM_save GDIBWPatternMx
setmatrix GDIBWPatternDict matrix mp CTM_restore ~ !}b/hrf null d/prf{pfprep ~
6 1 $ 5 hrf restore}b/GraphInit{GDIHMatrix null eq{/Saved_CTM matrix d :
initmatrix ADO_mxRot concat 0 0 snap + : 0.48 @ GDIHPatternDict ` YStep mul ~
XStep mul ~ dsnap YStep V ~ XStep V ~ E +S/GDIHMatrix matrix currentmatrix
readonly d ; : 0.24 -0.24 +S GDIBWPatternDict ` Width Height E dsnap +S
/GDIBWPatternMx matrix currentmatrix readonly d ; ;}if}b/cirp{360 0 An C}b
/ellp{CTM_save + +S 0.5 0 M 0 0 0.5 360 0 An C CTM_restore}b/rrp{/rad ~ d/y2 ~
d/x2 ~ d/y1 ~ d/x1 ~ d x2 x1 add 2 V y1 M x1 y1 x1 y2 rad arct x1 y2 x2 y2 rad
arct x2 y2 x2 y1 rad arct x2 y1 x1 y1 rad arct C}b/RRp{CTM_save + +S/dyS ~ d
/dxS ~ d dxS 2 V 0 M 0 0 0 dyS 0.5 arct 0 dyS dxS dyS 0.5 arct dxS dyS dxS 0
0.5 arct dxS 0 0 0 0.5 arct C CTM_restore}b
%%EndResource
%%BeginResource: procset AdobePS_Win_Graphics_L1 4.2 0
/arct{arcto ! ! ! !}b/GDIpattfill{@ ` BGnd null ne PaintType 2 eq and{: BGnd
aload ! sgco fEOFill{O}{L}? ; FGnd aload ! U/fGray 2 ^ put{2}{4}? -1 $}if E @
patterncalc : 4 ^/PaintType get 2 eq{fGray{6 -1 $ sg}{8 -3 $ sco}?}if fEOFill{
eoclip}{clip}? N patternfill ; N}b/hrf{/fGray 1 ^ 6 eq d -4 $ N rp C/fEOFill F
d GDIpattfill}b/hfMain{/fEOFill ~ d/fGray ~ d GDIpattfill}b/hf{T hfMain}b/hfW{
F hfMain}b/hs{currentpoint strokepath M hfW}b/pfMain{/fEOFill ~ d pfprep
GDIpattfill restore N}b/pf{T pfMain}b/pfW{F pfMain}b/ps{currentpoint
strokepath M pfW}b/mpstr 4 string d/mp{~ @ length 12 add dict copy `
/PatternCTM matrix currentmatrix d/PatternMatrix ~ d/PatWidth XStep mpstr
length mul d/PatHeight YStep d/FontType 3 d/Encoding StandardEncoding d
/FontMatrix matrix d/FontBBox BBox d/BuildChar{! @ ` XStep 0 FontBBox aload !
setcachedevice/PaintProc , E : exec ;}b & E ~ @ 3 -1 $ definefont}b
/patterncalc{` : PatternCTM setmatrix PatternMatrix concat BBox aload ! ! ! +
pathbbox ; PatHeight V ceiling 4 1 $ PatWidth V ceiling 4 1 $ PatHeight V
floor 4 1 $ PatWidth V floor 4 1 $ 2 ^ sub cvi abs ~ 3 ^ sub cvi abs ~ 4 2 $
PatHeight mul ~ PatWidth mul ~ E}b/patternfill{5 -1 $ @ ` Ji PatternCTM
setmatrix PatternMatrix concat 0 2 ^ 2 ^ M 0 1 mpstr length 1 sub{1 ^ mpstr 3
1 $ put}for ! 2 ^{currentpoint 5 ^{mpstr S}repeat YStep add M}repeat ! ! ! ! E
}b
%%EndResource
%%BeginResource: procset AdobePS_Win_BW_Images 4.2 0
/iw 0 d/ih 0 d/im_save 0 d/s 0 d/polarity 0 d/smoothflag 0 d/mystring 0 d/bpc
0 d L3?{/itype 4 d}{/itype 1 d}?/imask F d/im0 0 d/im1 0 d/im2 0 d/im3 0 d
/setup1asciiproc{[currentfile mystring/readhexstring cvx/! cvx]cvx bind}b
/setup1binaryproc{[currentfile mystring/readstring cvx/! cvx]cvx bind}b
/setup2asciiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}b
/setup2binaryproc{currentfile/RunLengthDecode filter}b/mycolorspace{colspABC}d
/myimagedict{/myimagedict 10 dict d myimagedict @ `/ImageType 1 d
/MultipleDataSource F d E}b/imageprocarray[/setup1binaryproc/setup1asciiproc
/setup2binaryproc/setup2asciiproc/setup1binarydecodeproc/setup1asciidecodeproc
]d/Q{/im_save save d sgco imageprocarray ~ get/s ~ , d/imask ~ d/polarity ~ d
/smoothflag ~ d +/dx 2 ^ d/dy 1 ^ d +S/mystring ~ string d/bpc ~ d/ih ~ d/iw ~
d fx rf}b/X{/im_save save d imageprocarray ~ get/s ~ , d/imask ~ d/polarity ~
d/smoothflag ~ d +/dx 2 ^ d/dy 1 ^ d +S/mystring ~ string d/bpc ~ d/ih ~ d/iw
~ d}b/Z{im_save restore}b/Y{sgco myimagedict @ `/Width iw d/Height ih d/Decode
polarity{[1 0]}{[0 1]}? d/ImageMatrix[iw 0 0 ih 0 0]d/DataSource s d
/BitsPerComponent 1 d/Interpolate smoothflag d E imagemask}bd
%%EndResource
%%BeginResource: procset AdobePS_Win_Co_Images_L2 4.2 0
/doclutimage{/rgbclut ~ d ! imask{/im0 ~ d}if bpc @ 8 eq{! 255}{4 eq{15}{3}?}?
/hival ~ d[/Indexed colspABC hival rgbclut]setcolorspace myimagedict @ ` imask
{/MaskColor[im0]d/ImageType itype d}{/ImageType 1 d}?/Width iw d/Height ih d
/Decode[0 hival]d/ImageMatrix[iw 0 0 ih 0 0]d/DataSource s d/BitsPerComponent
bpc d/Interpolate smoothflag d E image}b/doCMYKclutimage{/CMYKclut ~ d ! imask
{/im0 ~ d}if bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/hival ~ d[/Indexed/DeviceCMYK
hival CMYKclut]setcolorspace myimagedict @ ` imask{/MaskColor[im0]d/ImageType
itype d}{/ImageType 1 d}?/Width iw d/Height ih d/Decode[0 hival]d/ImageMatrix[
iw 0 0 ih 0 0]d/DataSource s d/BitsPerComponent bpc d/Interpolate smoothflag d
E image}b/doNimage{bpc 24 eq{imask{/im2 ~ d/im1 ~ d/im0 ~ d}if colspABC}{imask
{/im0 ~ d}if colspA}? setcolorspace myimagedict @ ` imask{bpc 24 eq{/MaskColor
[im0 im1 im2]d}{/MaskColor[im0]d}?/ImageType itype d}{/ImageType 1 d}?/Width
iw d/Height ih d/Decode bpc 24 eq{[0 1 0 1 0 1]}{[0 1]}? d/ImageMatrix[iw 0 0
ih 0 0]d/DataSource s d/BitsPerComponent bpc 24 eq{8}{bpc}? d/Interpolate
smoothflag d E image}b/doCMYKimage{imask{/im3 ~ d/im2 ~ d/im1 ~ d/im0 ~ d}if
/DeviceCMYK setcolorspace myimagedict @ ` imask{/MaskColor[im0 im1 im2 im3]d
/ImageType itype d}{/ImageType 1 d}?/Width iw d/Height ih d/Decode[0 1 0 1 0 1
0 1]d/ImageMatrix[iw 0 0 ih 0 0]d/DataSource s d/BitsPerComponent 8 d
/Interpolate smoothflag d E image}b
%%EndResource
%%BeginResource: procset AdobePS_Win_Type3_Hdr 4.2 0
{version cvi 2016 ge 32/FontType resourcestatus{pop pop true}{false}ifelse and
}exec/Is2016andT32? exch def/Undef32{Is2016andT32?{/BitmapFontInit/ProcSet
findresource begin dup findfont dup/TT32R known{/TT32R get removeall}{pop}
ifelse end}if undefinefont}bind def/AddT32Char{6 1 roll 0 get 7 1 roll pop pop
pop pop findfont/TT32R get addglyph}bind def/AddT3Char{findfont dup 5 2 roll
exch dup length 0 gt{exch cvx 1 index exch 4 exch put dup(imagemask)cvx cvn 5
exch put cvx}{cvx exch pop}ifelse 3 -1 roll/CharProcs get 3 1 roll put/Metrics
get 3 1 roll put pop pop}bind def/AddT3T32Char Is2016andT32?{/AddT32Char}{
/AddT3Char}ifelse load def/GreNewFontT32{6 dict begin AddOrigFP{/XUID exch def
}if/FontBBox exch def pop/FontMatrix exch def/CIDFontType 4 def currentdict
end/Font defineresource 3 1 roll[exch]/DrvSBCMap exch composefont dup length
dict copy dup/FID undef begin/TT32R exch def currentdict end definefont
/BitmapFontInit/ProcSet findresource begin/TT32R get[14 0 0 0 0 0]()0 4 -1
roll addglyph end}bind def/GreNewFontT3{11 dict begin AddOrigFP{/XUID exch def
}if/FontType 3 def/FontBBox exch def exch dup dup 3 get neg 3 exch put
/FontMatrix exch def/Encoding G00GFFEncoding def/CharProcs 129 dict def
CharProcs/.notdef{0 0 setcharwidth}put/Metrics 129 dict def Metrics/.notdef 3
-1 roll put pop pop pop/BuildChar{userdict begin/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get charname
2 copy known{get aload pop}{pop/.notdef get aload pop}ifelse setcachedevice
fontdict begin Encoding char get CharProcs exch 2 copy known{get}{pop/.notdef
get}ifelse end exec end}def currentdict end definefont pop}bind def
/GreNewFontT3T32{Is2016andT32?{GreNewFontT32}{GreNewFontT3}ifelse}bind def
Is2016andT32?{/CIDInit/ProcSet findresource begin 10 dict begin begincmap
/CIDSystemInfo<</Registry(Adobe)/Ordering(Identity1)/Supplement 0>>def
/CMapName/Identity1 def/CMapType 0 def/WMode 0 def 1 begincodespacerange<00>
<ff>endcodespacerange 1 begincidrange<00><ff>0 endcidrange endcmap/DrvSBCMap
currentdict/CMap defineresource pop end end}if/AddChar{findfont dup 4 1 roll
/CharProcs get 3 1 roll put/Metrics get 3 1 roll put}def/GreNewFont{12 dict
dup begin 8 1 roll AddOrigFP{5 1 roll/XUID exch def}{4 1 roll}ifelse/FontType
3 def/FontMatrix exch def/FontBBox exch def/Encoding G00GFFEncoding def
/CharProcs 129 dict def CharProcs/.notdef{0 0 setcharwidth}put/Metrics 129
dict def Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get charname
2 copy known{get aload pop}{pop/.notdef get aload pop}ifelse setcachedevice
fontdict begin Encoding char get CharProcs exch 2 copy known{get}{pop/.notdef
get}ifelse end exec}def end definefont pop}def/CopyT3Hdr{findfont dup
maxlength dict begin{1 index/FID ne{def}{pop pop}ifelse}forall currentdict end
dup begin exch{5 1 roll/XUID exch def}{4 1 roll}ifelse/FontType 3 def
/FontMatrix exch def/FontBBox exch def/CharProcs 129 dict def CharProcs
/.notdef{0 0 setcharwidth}put/Metrics 129 dict def Metrics/.notdef 3 -1 roll
put end definefont pop}bind def
%%EndResource
%%BeginResource: procset AdobePS_Win_Type1_Hdr 4.2 0
/Type1Hdr{15 dict begin AddOrigFP{/XUID exch def}if/FontName exch def
/PaintType exch def/FontType 1 def/FontMatrix[1 3 index div 0 0 1 6 index div
0 0]def pop/Encoding G00GFFEncoding def pop pop/FontBBox{0 0 0 0}def
currentdict end systemdict begin dup/Private 8 dict dup begin 5 -1 roll{/RD{
string currentfile exch readstring pop}def}{/RD{string currentfile exch
readhexstring pop}def}ifelse/ND{def}def/NP{put}def/BlueValues[-250 0 2200 2200
]def/MinFeature{16 16}def/lenIV -1 def/password 5839 def 2 index/CharStrings
256 dict dup begin}bind def/T1EFtr{/.notdef{pop 0 0 setcharwidth}def end end
put put dup/FontName get exch definefont pop end}bind def/T1EHdrU{findfont dup
/Private get begin/CharStrings get begin}bind def/T1EFtrU{end end end}bind def
/CopyT1Hdr{findfont dup maxlength dict begin{1 index/FID ne{1 index
/CharStrings ne{def}{dup maxlength dict begin{1 index/.notdef ne{pop pop}{def}
ifelse}forall currentdict end def}ifelse}{pop pop}ifelse}forall currentdict
end begin{/XUID exch def}if/FontName exch def/PaintType exch def/FontType 1
def/FontMatrix[1 3 index div 0 0 1 6 index div 0 0]def pop pop pop/FontBBox{0
0 0 0}def FontName currentdict end definefont pop}bind def
%%EndResource
%%BeginResource: procset AdobePS_Win_Type0_Hdr 4.2 0
/Type02Hdr{25 dict ` AddOrigFP/Encoding ~ d/FDepVector ~ d/WMode ~ d/FontName
~ d/PaintType ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d FontName
& E definefont !}bind d/Type06Hdr{25 dict ` AddOrigFP/SubsVector ~ d/Encoding
~ d/FDepVector ~ d/WMode ~ d/FontName ~ d/PaintType ~ d/FontType 0 d/FMapType
6 d/FontMatrix[1 0 0 1 0 0]d FontName & E definefont !}bind d/Type09Hdr{25
dict ` AddOrigFP/Encoding ~ d/FDepVector ~ d/CMap ~ d/WMode ~ d/FontName ~ d
/PaintType ~ d/FontType 0 d/FMapType 9 d/FontMatrix[1 0 0 1 0 0]d FontName & E
definefont !}bind d
%%EndResource
%%BeginResource: procset AdobePS_Win_Type42 4.2 0
/asc42 0 d/sF42{/asc42 ~ d Ji}bind d/bS42{0 asc42 -M}bind d/eS42{0 asc42 neg
-M}b/Type42Encoding{/Encoding G00GFFEncoding d}bind d/Type42DictBegin{
/PaintType 0 d/FontType 42 d/FontMatrix[1 0 0 1 0 0]d ! 4 array astore cvx
/FontBBox ~ d/sfnts}bind d/t42CSB{/CharStrings 266 dict `/.notdef 0 d 0 1 255{
G00GFFEncoding ~ get 0 d}for & E d}bind d/T42NumChars 0 d/T42StartIndex 0 d
/t42BBC{/T42NumChars ~ d/T42StartIndex ~ d}bind d/t42EBC{1 1 T42NumChars{!
CharStrings 3 1 $ put}for}bind d/t42CSE{}bind d/Is2015?{version cvi 2015 ge}
bind d/AllocGlyphStorage{Is2015?{!}{{string}forall}?}bind d/PrepFor2015{
Is2015?{/GlyphDirectory 16 dict d sfnts 0 get @ 2 ^(glyx)putinterval 2 ^(locx)
putinterval ! !}{! !}?}bind d/AddT42Char{Is2015?{findfont/GlyphDirectory get `
d E ! !}{findfont/sfnts get 4 ^ get 3 ^ 2 ^ putinterval ! ! ! !}?}bind d
/Type42DescendantEncoding{/Type42DescendantEncoding G00GFFEncoding d}bind d
/Type0Encoding{/Encoding ~ @ array @ 3 -1 $ 1 sub 0 1 3 -1 ${@ put @}for ! d}
bind d/Type0DictBegin{/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d
/sfnts}bind d/Type42DescendantCharString{/GlyphIndex ~ d/maxGlyphs ~ d 0 1 3
-1 $ 1 sub{@ @ 10 lt{! 11 string}{100 lt{12 string}{13 string}?}? @ 0
(CharString)putinterval @ 3 -1 $ 3 string cvs 10 ~ putinterval cvn 256 dict @
3 1 $ d Type42DescendantEncoding{1 ^ ~ GlyphIndex maxGlyphs lt{GlyphIndex put
/GlyphIndex GlyphIndex 1 add d}{! !}?}forall !}for}bind d/AddGDirDict{Is2015?{
/GlyphDirectory get/GlyphDirectory ~ d}{!}?}bind d/RD{string currentfile ~
readstring !}executeonly d/B42CS{{/GITable ~ d/BeginCharCode GITable 0 get d
/EndCharCode GITable 1 get d CharStrings ` BeginCharCode 1 EndCharCode{@
Encoding ~ get ~ BeginCharCode sub 2 add GITable ~ get d}for E}{!}?}bind d
/CIDT42Hdr{25 dict `{/XUID ~ d}if @/WMode ~ d 0 gt{/Metrics2 16 dict d
/CDevProc{! @ 1.9 gt 3 ^ neg 0.99 gt or{! 0.85}{4 ^ add}?}bind d/FontMatrix[0
1 -1 0 0 0]d}{/FontMatrix[1 0 0 1 0 0]d}?/Encoding StandardEncoding d
/CharStrings 2 dict @ `/.notdef 0 d E d/CIDMap ~ d/CIDCount ~ d/CIDFontName ~
d AddOrigFP/CIDSystemInfo 3 dict @ ` 3 -1 $/Supplement ~ d 3 -1 $/Ordering ~ d
3 -1 $/Registry ~ d E d/GDBytes 2 d/CIDFontType 2 d/FontType 42 d/PaintType 0
d ! 4 array astore cvx/FontBBox ~ d/sfnts}bind d/T0AddT42Mtx2{/CIDFont
findresource/Metrics2 get ` d E}bind d/UpdateCIDMap{/CIDFont findresource
/CIDMap get 3 1 $ putinterval}d/T0AddT42Char{/CIDFont findresource
/GlyphDirectory get ` d E ! !}bind d/CIDT42Tlr{CIDFontName & E/CIDFont
defineresource !}d/CopyT42Hdr{findfont @ length dict `{1 ^/FID ne{1 ^
/CharStrings ne{d}{@ length dict `{1 ^/.notdef ne{! !}{d}?}forall & E d}?}{! !
}?}forall & E `/FontName ~ d/FontType 42 d B42CS FontName & E definefont !}
bind d/t42MF{findfont 0 copyfont `/FontName ~ d/Encoding G00GFFEncoding d get
/CharStrings ~ @/.notdef 0 put d & @ E/FontName get ~ definefont !}bind d
%%EndResource
%%BeginResource: procset AdobePS-CMAP-WinCharSetFFFF 4.2 0
/CMAP-WinCharSetFFFF-H{/CIDInit/ProcSet findresource ` 12 dict ` begincmap
/CIDSystemInfo<</Registry(Adobe)/Ordering(WinCharSetFFFF)/Supplement 0>>d
/CMapName/WinCharSetFFFF-H d/CMapVersion 1 d/CMapType 0 d/WMode 0 d 1
begincodespacerange<0000><ffff>endcodespacerange 100 begincidrange<0000><00ff>
0<0100><01ff>256<0200><02ff>512<0300><03ff>768<0400><04ff>1024<0500><05ff>1280
<0600><06ff>1536<0700><07ff>1792<0800><08ff>2048<0900><09ff>2304<0a00><0aff>
2560<0b00><0bff>2816<0c00><0cff>3072<0d00><0dff>3328<0e00><0eff>3584<0f00>
<0fff>3840<1000><10ff>4096<1100><11ff>4352<1200><12ff>4608<1300><13ff>4864
<1400><14ff>5120<1500><15ff>5376<1600><16ff>5632<1700><17ff>5888<1800><18ff>
6144<1900><19ff>6400<1a00><1aff>6656<1b00><1bff>6912<1c00><1cff>7168<1d00>
<1dff>7424<1e00><1eff>7680<1f00><1fff>7936<2000><20ff>8192<2100><21ff>8448
<2200><22ff>8704<2300><23ff>8960<2400><24ff>9216<2500><25ff>9472<2600><26ff>
9728<2700><27ff>9984<2800><28ff>10240<2900><29ff>10496<2a00><2aff>10752<2b00>
<2bff>11008<2c00><2cff>11264<2d00><2dff>11520<2e00><2eff>11776<2f00><2fff>
12032<3000><30ff>12288<3100><31ff>12544<3200><32ff>12800<3300><33ff>13056
<3400><34ff>13312<3500><35ff>13568<3600><36ff>13824<3700><37ff>14080<3800>
<38ff>14336<3900><39ff>14592<3a00><3aff>14848<3b00><3bff>15104<3c00><3cff>
15360<3d00><3dff>15616<3e00><3eff>15872<3f00><3fff>16128<4000><40ff>16384
<4100><41ff>16640<4200><42ff>16896<4300><43ff>17152<4400><44ff>17408<4500>
<45ff>17664<4600><46ff>17920<4700><47ff>18176<4800><48ff>18432<4900><49ff>
18688<4a00><4aff>18944<4b00><4bff>19200<4c00><4cff>19456<4d00><4dff>19712
<4e00><4eff>19968<4f00><4fff>20224<5000><50ff>20480<5100><51ff>20736<5200>
<52ff>20992<5300><53ff>21248<5400><54ff>21504<5500><55ff>21760<5600><56ff>
22016<5700><57ff>22272<5800><58ff>22528<5900><59ff>22784<5a00><5aff>23040
<5b00><5bff>23296<5c00><5cff>23552<5d00><5dff>23808<5e00><5eff>24064<5f00>
<5fff>24320<6000><60ff>24576<6100><61ff>24832<6200><62ff>25088<6300><63ff>
25344 endcidrange 28 begincidrange<6400><64ff>25600<6500><65ff>25856<6600>
<66ff>26112<6700><67ff>26368<6800><68ff>26624<6900><69ff>26880<6a00><6aff>
27136<6b00><6bff>27392<6c00><6cff>27648<6d00><6dff>27904<6e00><6eff>28160
<6f00><6fff>28416<7000><70ff>28672<7100><71ff>28928<7200><72ff>29184<7300>
<73ff>29440<7400><74ff>29696<7500><75ff>29952<7600><76ff>30208<7700><77ff>
30464<7800><78ff>30720<7900><79ff>30976<7a00><7aff>31232<7b00><7bff>31488
<7c00><7cff>31744<7d00><7dff>32000<7e00><7eff>32256<7f00><7fff>32512
endcidrange 100 begincidrange<8000><80ff>32768<8100><81ff>33024<8200><82ff>
33280<8300><83ff>33536<8400><84ff>33792<8500><85ff>34048<8600><86ff>34304
<8700><87ff>34560<8800><88ff>34816<8900><89ff>35072<8a00><8aff>35328<8b00>
<8bff>35584<8c00><8cff>35840<8d00><8dff>36096<8e00><8eff>36352<8f00><8fff>
36608<9000><90ff>36864<9100><91ff>37120<9200><92ff>37376<9300><93ff>37632
<9400><94ff>37888<9500><95ff>38144<9600><96ff>38400<9700><97ff>38656<9800>
<98ff>38912<9900><99ff>39168<9a00><9aff>39424<9b00><9bff>39680<9c00><9cff>
39936<9d00><9dff>40192<9e00><9eff>40448<9f00><9fff>40704<a000><a0ff>40960
<a100><a1ff>41216<a200><a2ff>41472<a300><a3ff>41728<a400><a4ff>41984<a500>
<a5ff>42240<a600><a6ff>42496<a700><a7ff>42752<a800><a8ff>43008<a900><a9ff>
43264<aa00><aaff>43520<ab00><abff>43776<ac00><acff>44032<ad00><adff>44288
<ae00><aeff>44544<af00><afff>44800<b000><b0ff>45056<b100><b1ff>45312<b200>
<b2ff>45568<b300><b3ff>45824<b400><b4ff>46080<b500><b5ff>46336<b600><b6ff>
46592<b700><b7ff>46848<b800><b8ff>47104<b900><b9ff>47360<ba00><baff>47616
<bb00><bbff>47872<bc00><bcff>48128<bd00><bdff>48384<be00><beff>48640<bf00>
<bfff>48896<c000><c0ff>49152<c100><c1ff>49408<c200><c2ff>49664<c300><c3ff>
49920<c400><c4ff>50176<c500><c5ff>50432<c600><c6ff>50688<c700><c7ff>50944
<c800><c8ff>51200<c900><c9ff>51456<ca00><caff>51712<cb00><cbff>51968<cc00>
<ccff>52224<cd00><cdff>52480<ce00><ceff>52736<cf00><cfff>52992<d000><d0ff>
53248<d100><d1ff>53504<d200><d2ff>53760<d300><d3ff>54016<d400><d4ff>54272
<d500><d5ff>54528<d600><d6ff>54784<d700><d7ff>55040<d800><d8ff>55296<d900>
<d9ff>55552<da00><daff>55808<db00><dbff>56064<dc00><dcff>56320<dd00><ddff>
56576<de00><deff>56832<df00><dfff>57088<e000><e0ff>57344<e100><e1ff>57600
<e200><e2ff>57856<e300><e3ff>58112 endcidrange 28 begincidrange<e400><e4ff>
58368<e500><e5ff>58624<e600><e6ff>58880<e700><e7ff>59136<e800><e8ff>59392
<e900><e9ff>59648<ea00><eaff>59904<eb00><ebff>60160<ec00><ecff>60416<ed00>
<edff>60672<ee00><eeff>60928<ef00><efff>61184<f000><f0ff>61440<f100><f1ff>
61696<f200><f2ff>61952<f300><f3ff>62208<f400><f4ff>62464<f500><f5ff>62720
<f600><f6ff>62976<f700><f7ff>63232<f800><f8ff>63488<f900><f9ff>63744<fa00>
<faff>64000<fb00><fbff>64256<fc00><fcff>64512<fd00><fdff>64768<fe00><feff>
65024<ff00><ffff>65280 endcidrange endcmap CMapName &/CMap defineresource ! E
E}bind d/CMAP-WinCharSetFFFF-V{CMAP-WinCharSetFFFF-H/WinCharSetFFFF-V
/WinCharSetFFFF-H/CMap findresource/CMap defineresource !}bind d
%%EndResource
%%BeginResource: procset AdobePS_Win_Compat 4.2 0
userdict/AdobePS_Win_Compat 13 dict dup begin/bd{bind def}bind def/ld{load def
}bd/CB{pop pop pop pop}bind def/B{pop pop pop pop}bind def/$x matrix def/SS{
/pagesave save def}bind def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}bind def/ANSIVec[0/grave 1/acute 2/circumflex 3
/tilde 4/macron 5/breve 6/dotaccent 7/dieresis 8/ring 9/cedilla 10
/hungarumlaut 11/ogonek 12/caron 13/dotlessi 39/quotesingle 96/grave 124/bar
130/quotesinglbase 131/florin 132/quotedblbase 133/ellipsis 134/dagger 135
/daggerdbl 136/circumflex 137/perthousand 138/Scaron 139/guilsinglleft 140/OE
145/quoteleft 146/quoteright 147/quotedblleft 148/quotedblright 149/bullet 150
/endash 151/emdash 152/tilde 153/trademark 154/scaron 155/guilsinglright 156
/oe 159/Ydieresis 160/space 161/exclamdown 164/currency 165/yen 166/brokenbar
167/section 168/dieresis 169/copyright 170/ordfeminine 171/guillemotleft 172
/logicalnot 173/hyphen 174/registered 175/macron 176/degree 177/plusminus 178
/twosuperior 179/threesuperior 180/acute 181/mu 182/paragraph 183
/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 187
/guillemotright 188/onequarter 189/onehalf 190/threequarters 191/questiondown
192/Agrave 193/Aacute 194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198
/AE 199/Ccedilla 200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204
/Igrave 205/Iacute 206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve
211/Oacute 212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 223
/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 229
/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 235/edieresis
236/igrave 237/iacute 238/icircumflex 239/idieresis 240/eth 241/ntilde 242
/ograve 243/oacute 244/ocircumflex 245/otilde 246/odieresis 247/divide 248
/oslash 249/ugrave 250/uacute 251/ucircumflex 252/udieresis 253/yacute 254
/thorn 255/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{
pop pop}ifelse}forall/initialize{currentdict exch begin begin}bind def
/terminate{/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate
load def/resume/initialize load def/M/moveto load def end put/Courier findfont
10 scalefont setfont
%%EndResource
end

%%EOF
