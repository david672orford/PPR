*PPD-Adobe: "4.3"

*% =================================
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1992-2003 Hewlett-Packard Company
*%
*% Permission is hereby granted, free of charge, to any person obtaining
*% a copy of this software and associated documentation files (the
*% "Software"), to deal in the Software without restriction, including
*% without limitation the rights to use, copy, modify, merge, publish,
*% distribute, sublicense, and/or sell copies of the Software, and to
*% permit persons to whom the Software is furnished to do so, subject to
*% the following conditions:
*% 
*% The above copyright notice and this permission notice shall be
*% included in all copies or substantial portions of the Software.
*% 
*% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
*% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
*% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
*% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
*% LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
*% OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
*% WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*% 
*% [this is the MIT open source license -- please see www.opensource.org]
*%

*% PPD Version for Apple Macintosh
*% =================================
*% Product/PPD Version Information
*% =================================
*% PPD File Version Information
*FormatVersion: "4.3"
*FileVersion: "1.1.1 X"
*LanguageVersion: English
*LanguageEncoding: MacStandard
*PCFileName: "HP__CLJ5.PPD"
*APDialogExtension: "/Library/Printers/hp/PDEs/hpColorOptions.plugin"
*APDialogExtension: "/Library/Printers/hp/PDEs/hpEdgeToEdge.plugin"
*APDialogExtension: "/Library/Printers/hp/PDEs/hpFinishing.plugin"
*APDialogExtension: "/Library/Printers/hp/PDEs/hpImageQuality.plugin"
*APDialogExtension: "/Library/Printers/hp/PDEs/hpProofAndPrint.plugin"
*cupsICCProfile RGB../sRGB Matching Profile: "/Library/Printers/hp/Profiles/sRGB_A.icc"
*APPrinterIconPath: "/Library/Printers/hp/Icons/HP Color LaserJet 5M.icns"

*% Product Name and Version Information
*Manufacturer:	"HP"
*Product: 	"(HP Color LaserJet 5/5M)"
*ModelName:	"HP Color LaserJet 5/5M"
*ShortNickName: "HP Color LaserJet 5M"
*NickName:	"HP Color LaserJet 5/5M v2015.104"
*PSVersion:	"(2015.104) 4"

*% =================================
*% Basic Device Capabilities
*% =================================
*LanguageLevel: 	"2"
*ColorDevice:  		True
*DefaultColorSpace: RGB
*TTRasterizer: 		Type42
*FileSystem: 		False
*Throughput: 		"10"

*% =================================
*% Emulations and Protocols
*% =================================
*Protocols: PJL TBCP
*JCLBegin: 				"<1B>%-12345X@PJL JOB<0A>"
*JCLToPSInterpreter: 	"@PJL ENTER LANGUAGE = POSTSCRIPT <0A>"
*JCLEnd: 				""

*%=== Output Bin ======================
*PageStackOrder Upper: Normal
*PageStackOrder Lower: Reverse

*% =================================
*% Installable Options
*% =================================
*OpenGroup: InstallableOptions/Options Installed
*OpenUI *HPOption_500_Sheet_Feeder_Tray3/Rear Feed Unit: Boolean
*DefaultHPOption_500_Sheet_Feeder_Tray3: False
*HPOption_500_Sheet_Feeder_Tray3 True/Installed: ""
*HPOption_500_Sheet_Feeder_Tray3 False/Not Installed: ""
*?HPOption_500_Sheet_Feeder: "
	save
		currentpagedevice /InputAttributes get
		dup 1 known
		{1 get null eq {(False)}{(True)}ifelse}{pop (False)}ifelse = flush
	restore
"
*End
*CloseUI: *HPOption_500_Sheet_Feeder_Tray3

*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: 36Meg
*InstalledMemory 36Meg/36 - 43 MB RAM: ""
*InstalledMemory 44Meg/44 - 51 MB RAM: ""
*InstalledMemory 52Meg/52 - 59 MB RAM: ""
*InstalledMemory 60Meg/60 - 67 MB RAM: ""
*InstalledMemory 68Meg/³ 68 MB RAM: ""
*?InstalledMemory: "
  save
	currentsystemparams /RamSize get
	524288 div ceiling cvi 2 div
	/size exch def
	size 68 ge
	{(68Meg)}
	{size 60 ge
		{(60Meg)}
		{size 52 ge
			{(52Meg)}
			{size 44 ge
				{(44Meg)}
				{(36Meg)}ifelse
			}ifelse
		}ifelse
	}ifelse = flush
  restore
"
*End
*CloseUI: *InstalledMemory

*OpenUI *HPOption_PaperPolicy/Paper Match: PickOne
*OrderDependency: 10 AnySetup *HPOption_PaperPolicy
*DefaultHPOption_PaperPolicy: Prompt
*HPOption_PaperPolicy Prompt/Prompt User: "
    <</DeferredMediaSelection true>> setpagedevice"
*End
*HPOption_PaperPolicy Scale/Nearest Size & Scale: "
    <</DeferredMediaSelection false>> setpagedevice
    <</Policies << /PageSize 3 >> >> setpagedevice"
*End
*HPOption_PaperPolicy Crop/Nearest Size & Crop: "
    <</DeferredMediaSelection false>> setpagedevice
    <</Policies << /PageSize 5 >> >> setpagedevice"
*End
*CloseUI: *HPOption_PaperPolicy
*CloseGroup: InstallableOptions

*% =================================
*% User Interface Constraints
*% =================================
*% Pantone and Grayscale are mutually exclusive
*UIConstraints: *HPColorSmart Pantone *HPColorAsGray True
*UIConstraints: *HPColorAsGray True *HPColorSmart Pantone

*% If selected page size is not supported, disable Rear Tray UI
*UIConstraints: *PageSize   Tabloid *InputSlot Rear
*UIConstraints: *PageRegion Tabloid *InputSlot Rear
*UIConstraints: *PageSize   A3      *InputSlot Rear
*UIConstraints: *PageRegion A3      *InputSlot Rear
*UIConstraints: *PageSize   Legal   *InputSlot Rear
*UIConstraints: *PageRegion Legal   *InputSlot Rear
*UIConstraints: *PageSize   LegalSmall   *InputSlot Rear
*UIConstraints: *PageRegion LegalSmall   *InputSlot Rear

*% If Rear Tray is selected disable Tabloid, A3, Legal paper sizes
*UIConstraints: *InputSlot Rear *PageSize   Tabloid
*UIConstraints: *InputSlot Rear *PageRegion Tabloid
*UIConstraints: *InputSlot Rear *PageSize   A3
*UIConstraints: *InputSlot Rear *PageRegion A3
*UIConstraints: *InputSlot Rear *PageSize   Legal
*UIConstraints: *InputSlot Rear *PageRegion Legal
*UIConstraints: *InputSlot Rear *PageSize   LegalSmall
*UIConstraints: *InputSlot Rear *PageRegion LegalSmall

*% =================================
*% Media Selection
*% =================================
*LandscapeOrientation: Plus90
*VariablePaperSize: False
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter/US Letter: "
	<</PageSize [612 792] /ImagingBBox null>> setpagedevice"
*End
*PageSize LetterSmall/US Letter(Small): "
	<</PageSize [612 792] /ImagingBBox null>> setpagedevice"
*End
*PageSize Legal/US Legal: "
	<</PageSize [612 1008] /ImagingBBox null>> setpagedevice"
*End
*PageSize LegalSmall/US Legal (Small): "
	<</PageSize [612 1008] /ImagingBBox null>> setpagedevice"
*End
*PageSize Tabloid/11x17: "
	<</PageSize [792 1224] /ImagingBBox null>> setpagedevice"
*End
*PageSize Executive/Executive: "
	<</PageSize [522 756] /ImagingBBox null>> setpagedevice"
*End
*PageSize A4/A4: "
	<</PageSize [595 842] /ImagingBBox null>> setpagedevice"
*End
*PageSize A4Small/A4(Small): "
	<</PageSize [595 842] /ImagingBBox null>> setpagedevice"
*End
*PageSize A3/A3: "
	<</PageSize [842 1191] /ImagingBBox null>> setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if
   (Unknown)
  6 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [792 1224] (Tabloid) put
   dup [522 756] (Executive) put
   dup [595 842] (A4) put
   dup [842 1190] (A3) put
 { exch aload pop 4 index sub abs 5 le exch
   5 index sub abs 5 le and
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore
"
*End
*CloseUI: *PageSize
*OpenUI *PageRegion:  PickOne
*OrderDependency: 30 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/US Letter: "
	<</PageSize [612 792] /ImagingBBox null>> setpagedevice"
*End
*PageRegion LetterSmall/US Letter(Small): "
	<</PageSize [612 792] /ImagingBBox null>> setpagedevice"
*End
*PageRegion Legal/US Legal: "
	<</PageSize [612 1008] /ImagingBBox null>> setpagedevice"
*End
*PageRegion LegalSmall/US Legal (Small): "
	<</PageSize [612 1008] /ImagingBBox null>> setpagedevice"
*End
*PageRegion Tabloid/11x17: "
	<</PageSize [792 1224] /ImagingBBox null>> setpagedevice"
*End
*PageRegion Executive/Executive: "
	<</PageSize [522 756] /ImagingBBox null>> setpagedevice"
*End
*PageRegion A4/A4: "
	<</PageSize [595 842] /ImagingBBox null>> setpagedevice"
*End
*PageRegion A4Small/A4(Small): "
	<</PageSize [595 842] /ImagingBBox null>> setpagedevice"
*End
*PageRegion A3/A3: "
	<</PageSize [842 1191] /ImagingBBox null>> setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter/US Letter:				"11.28 12.00 601.19 779.02"
*ImageableArea LetterSmall/US Letter(Small):	"30.00 31.00 582.00 761.00 "
*ImageableArea Legal/US Legal: 					"10.32 10.80 600.71 997.17"
*ImageableArea LegalSmall/US Legal (Small):		"64.00 54.00 548.00 954.00 "
*ImageableArea Tabloid/11x17: 					"12.00 11.28 779.02 1212.68"
*ImageableArea Executive/Executive: 			"13.20 13.20 508.79 741.82"
*ImageableArea A4/A4: 							"12.96 13.92 581.27 827.02"
*ImageableArea A4Small/A4(Small): 				"28.00 30.00 566.00 811.00 "
*ImageableArea A3/A3: 							"13.92 11.28 827.02 1179.57"
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter/US Letter: 				"612 792"
*PaperDimension LetterSmall/US Letter(Small):	"612 792 "
*PaperDimension Legal/US Legal: 				"612 1008"
*PaperDimension LegalSmall/US Legal (Small): 	"612 1008 "
*PaperDimension Tabloid/11x17: 					"792 1224"
*PaperDimension Executive/Executive: 			"522 756"
*PaperDimension A4/A4: 							"595 842"
*PaperDimension A4Small/A4(Small): 			"595 842"
*PaperDimension A3/A3: 							"842 1191"
*RequiresPageRegion Front: False
*RequiresPageRegion Rear: True
*RequiresPageRegion Manual: True

*% ===================================
*% Gray Levels and Halftoning
*% ===================================
*ContoneOnly: True
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% =================================
*% Print Color as Gray
*% Chose NOT to use Adobe's *ColorModel keyword because color on or off is simpler
*% =================================
*OpenUI *HPColorAsGray/Print Color as Gray:  Boolean
*OrderDependency: 40 DocumentSetup *HPColorAsGray
*DefaultHPColorAsGray: False
*HPColorAsGray True/On: "<</ProcessColorModel /DeviceGray>> setpagedevice"
*HPColorAsGray False/Off: "<</ProcessColorModel /DeviceRGB>> setpagedevice"
*?HPColorAsGray: "
  save
    currentpagedevice /ProcessColorModel get
	/DeviceGray eq {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *HPColorAsGray

*% =================================
*% Media Handling Features
*% =================================
*% Media Input Source
*OpenUI *InputSlot/Paper Source: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Front
*InputSlot Front/Front Tray: "
    <</DeferredMediaSelection true
	  /MediaPosition 0
	>> setpagedevice"
*End
*InputSlot Rear/Rear Tray: "
    <</DeferredMediaSelection true
	  /MediaPosition 1
	>> setpagedevice"
*End
*?InputSlot: "
save
	currentpagedevice /InputAttributes get
	/Priority get
	aload pop pop
	0 eq {(Front)} {(Rear)} ifelse
	= flush
restore
"
*End
*CloseUI: *InputSlot
*OpenUI *ManualFeed/Manual Feed:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True/True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False/False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*% Media output destination
*OpenUI *OutputBin/Output Bin: PickOne
*OrderDependency: 70 AnySetup *OutputBin
*DefaultOutputBin: Upper
*OutputBin Upper/Upper (Face Down): "1 dict dup /OutputFaceUp false put setpagedevice"
*OutputBin Lower/Lower (Face Up): "1 dict dup /OutputFaceUp true put setpagedevice"
*?OutputBin:"
save
	currentpagedevice /OutputFaceUp get
	{(Lower)}{(Upper)}ifelse = flush
restore
"
*End
*CloseUI: *OutputBin

*% ===================================
*% ColorSmart
*% ===================================
*OpenUI *HPColorSmart/ColorSmart: PickOne
*OrderDependency: 60 DocumentSetup *HPColorSmart
*DefaultHPColorSmart: Automatic
*HPColorSmart Automatic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartTextAdjustment
	Vivid ColorSmartGraphicsAdjustment
	MatchScreen ColorSmartImageAdjustment
	Detail ColorSmartTextHalftone
	Smooth ColorSmartGraphicsHalftone
	Smooth ColorSmartImageHalftone
	true ColorSmartColorMatching
} if
/setscreen { pop pop pop} def
/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
/sethalftone { pop } def
"
*End
*HPColorSmart Manual: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
} if
/setscreen { pop pop pop} def
/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
/sethalftone { pop } def
"
*End
*HPColorSmart Pantone/PANTONE<A8>: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartTextAdjustment
	NoAdj ColorSmartGraphicsAdjustment
	NoAdj ColorSmartImageAdjustment
	Smooth ColorSmartTextHalftone
	Smooth ColorSmartGraphicsHalftone
	Smooth ColorSmartImageHalftone
	true ColorSmartColorMatching
} if
/setscreen { pop pop pop} def
/setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
/sethalftone { pop } def
"
*End
*HPColorSmart AppHT/Application Halftoning: "
globaldict /ColorSmartColorMatching known {
	false ColorSmartColorMatching
} if
"
*End
*CloseUI: *HPColorSmart

*% ==================================
*%  ColorSmart Manual Settings
*% ==================================
*OpenUI *HPCSText/Manual Text:  PickOne
*OrderDependency: 50 AnySetup *HPCSText
*DefaultHPCSText: VividDetail
*HPCSText VividDetail/Vivid-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartTextAdjustment
	Detail ColorSmartTextHalftone
} if
"
*End
*HPCSText VividSmooth/Vivid-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartTextAdjustment
	Smooth ColorSmartTextHalftone
} if
"
*End
*HPCSText VividBasic/Vivid-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartTextAdjustment
	Basic ColorSmartTextHalftone
} if
"
*End
*HPCSText MatchDetail/Calibrated-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartTextAdjustment
	Detail ColorSmartTextHalftone
} if
"
*End
*HPCSText MatchSmooth/Calibrated-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartTextAdjustment
	Smooth ColorSmartTextHalftone
} if
"
*End
*HPCSText MatchBasic/Calibrated-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartTextAdjustment
	Basic ColorSmartTextHalftone
} if
"
*End
*HPCSText NoAdjDetail/No Adjust-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartTextAdjustment
	Detail ColorSmartTextHalftone
} if
"
*End
*HPCSText NoAdjSmooth/No Adjust-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartTextAdjustment
	Smooth ColorSmartTextHalftone
} if
"
*End
*HPCSText NoAdjBasic/No Adjust-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartTextAdjustment
	Basic ColorSmartTextHalftone
} if
"
*End
*CloseUI: *HPCSText

*OpenUI *HPCSGraphics/Manual Graphics:  PickOne
*OrderDependency: 50 AnySetup *HPCSGraphics
*DefaultHPCSGraphics: VividSmooth
*HPCSGraphics VividDetail/Vivid-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartGraphicsAdjustment
	Detail ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics VividSmooth/Vivid-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartGraphicsAdjustment
	Smooth ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics VividBasic/Vivid-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartGraphicsAdjustment
	Basic ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics MatchDetail/Calibrated-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartGraphicsAdjustment
	Detail ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics MatchSmooth/Calibrated-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartGraphicsAdjustment
	Smooth ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics MatchBasic/Calibrated-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartGraphicsAdjustment
	Basic ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics NoAdjDetail/No Adjust-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	noAdj ColorSmartGraphicsAdjustment
	Detail ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics NoAdjSmooth/No Adjust-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartGraphicsAdjustment
	Smooth ColorSmartGraphicsHalftone
} if
"
*End
*HPCSGraphics NoAdjBasic/No Adjust-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartGraphicsAdjustment
	Basic ColorSmartGraphicsHalftone
} if
"
*End
*CloseUI: *HPCSGraphics

*OpenUI *HPCSImages/Manual Image:  PickOne
*OrderDependency: 50 AnySetup *HPCSImages
*DefaultHPCSImages: MatchSmooth
*HPCSImages VividDetail/Vivid-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartImageAdjustment
	Detail ColorSmartImageHalftone
} if
"
*End
*HPCSImages VividSmooth/Vivid-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartImageAdjustment
	Smooth ColorSmartImageHalftone
} if
"
*End
*HPCSImages VividBasic/Vivid-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	Vivid ColorSmartImageAdjustment
	Basic ColorSmartImageHalftone
} if
"
*End
*HPCSImages MatchDetail/Calibrated-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartImageAdjustment
	Detail ColorSmartImageHalftone
} if
"
*End
*HPCSImages MatchSmooth/Calibrated-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartImageAdjustment
	Smooth ColorSmartImageHalftone
} if
"
*End
*HPCSImages MatchBasic/Calibrated-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	MatchScreen ColorSmartImageAdjustment
	Basic ColorSmartImageHalftone
} if
"
*End
*HPCSImages NoAdjDetail/No Adjust-Detail: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartImageAdjustment
	Detail ColorSmartImageHalftone
} if
"
*End
*HPCSImages NoAdjSmooth/No Adjust-Smooth: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartImageAdjustment
	Smooth ColorSmartImageHalftone
} if
"
*End
*HPCSImages NoAdjBasic/No Adjust-Basic: "
globaldict /ColorSmartColorMatching known {
	true ColorSmartColorMatching
	NoAdj ColorSmartImageAdjustment
	Basic ColorSmartImageHalftone
} if
"
*End
*CloseUI: *HPCSImages

*% =================================
*%  Control
*% =================================
*DefaultResolution: 300dpi
*Resolution 300dpi: ""
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End

*% =================================
*% Font Information
*% =================================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM
*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse
   } bind loop
   (*) = flush
 restore
"
*End
*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% ===================================
*% Printer Messages
*% ===================================
*% Printer Messages (verbatim from printer):
*Message: "%%[exitserver: permanent state may be changed]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "warming up"/warming up
*Status: "initializing"/initializing
*Status: "idle"/idle
*Status: "waiting"/waiting
*Status: "busy"/busy
*Status: "printing"/printing
*Status: "printing test page"/printing test page
*Status: "PrinterError: needs attention"/PrinterError: needs attention
*Status: "PrinterError: cover open"/PrinterError: cover open
*Status: "PrinterError: no toner cartridge"/PrinterError: no toner cartridge
*Status: "PrinterError: manual feed"/PrinterError: manual feed
*Status: "PrinterError: out of paper"/PrinterError: out of paper
*Status: "PrinterError: Paper Jam"/PrinterError: Paper Jam
*Status: "PrinterError: page protect needed"/PrinterError: page protect needed
*Status: "PrinterError: out of memory"/PrinterError: out of memory
*Status: "PrinterError: output bin full"/PrinterError: output bin full
*Status: "PrinterError: resetting printer"/PrinterError: resetting printer
*Status: "PrinterError: toner is low"/PrinterError: toner is low
*Status: "PrinterError: off line"/PrinterError: off line

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "other I/O"/other I/O
*Source: "AppleTalk"/AppleTalk
*Source: "APPLETALK"/AppleTalk
*Source: "ATALK"/AppleTalk
*Source: "LocalTalk"/LocalTalk
*Source: "Parallel"/Parallel
*Source: "EtherTalk"/EtherTalk
*Source: "NOVELL"/NOVELL
*Source: "DLC/LLC"/DLC/LLC
*Source: "ETALK"/EtherTalk
*Source: "TCP/IP"/TCP/IP

*% PrinterError (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "needs attention"/needs attention
*PrinterError: "cover open"/cover open
*PrinterError: "no toner cartridge"/no toner cartridge
*PrinterError: "manual feed"/manual feed
*PrinterError: "out of paper"/out of paper
*PrinterError: "Paper Jam"/Paper Jam
*PrinterError: "page protect needed"/page protect needed
*PrinterError: "out of memory"/out of memory
*PrinterError: "output bin full"/output bin full
*PrinterError: "resetting printer"/resetting printer
*PrinterError: "toner is low"/toner is low
*PrinterError: "off line"/off line

*% =================================
*% Color Separation Information
*% =================================
*DefaultColorSep: ProcessBlack.60lpi.300dpi
*InkName: ProcessBlack/Process Black
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"
*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*% =================================
*% System Management
*% =================================
*FreeVM: "4000000"
*VMOption 36Meg/36 - 43 MB RAM: "4000000"
*VMOption 44Meg/44 - 51 MB RAM: "12320000"
*VMOption 52Meg/52 - 59 MB RAM: "20640000"
*VMOption 60Meg/60 - 67 MB RAM: "28960000"
*VMOption 68Meg/³ 68 MB RAM: "37280000"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"
*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "300"
*Password: "()"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING: Cannot reset printer.) = flush
"
*End

*% =================================
*% For "HP Color LaserJet 5M"
*% =================================
